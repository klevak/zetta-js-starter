{
  "name": "argo-multiparty",
  "version": "0.0.3",
  "description": "Multiparty parsing middleware for argo.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mdobson/argo-multiparty.git"
  },
  "keywords": [
    "argo",
    "multiparty"
  ],
  "author": {
    "name": "Matthew Dobson",
    "email": "@mdobs"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mdobson/argo-multiparty/issues"
  },
  "homepage": "https://github.com/mdobson/argo-multiparty",
  "devDependencies": {
    "argo": "^0.4.9"
  },
  "dependencies": {
    "multiparty": "^3.2.3"
  },
  "_id": "argo-multiparty@0.0.3",
  "dist": {
    "shasum": "85b509c2a7b2160194b0d0d8b98c93fb5c733713",
    "tarball": "http://registry.npmjs.org/argo-multiparty/-/argo-multiparty-0.0.3.tgz"
  },
  "_from": "argo-multiparty@~0.0.3",
  "_npmVersion": "1.4.3",
  "_npmUser": {
    "name": "mdobs",
    "email": "mdobson4@gmail.com"
  },
  "maintainers": [
    {
      "name": "mdobs",
      "email": "mdobson4@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "85b509c2a7b2160194b0d0d8b98c93fb5c733713",
  "_resolved": "https://registry.npmjs.org/argo-multiparty/-/argo-multiparty-0.0.3.tgz",
  "readme": "##Multiparty Parsing for Argo\n\nSimple middleware harnessing multiparty for parsing. The parsed multiparty result is thrown into `env.multiparty`.\n\nSample:\n\n```\ncurl -i -X POST -H \"Content-Type:multipart/form-data\" -F name=test -F test=hello -F filedata=@test.txt http://localhost:3000/\n```\n\n```javascript\n//Get a file upload. Write it's original filename +'0' to the main directory of this app.\nvar argo = require('argo');\nvar argoMultiparty = require('../');\nvar fs = require('fs');\n\nargo()\n  .use(argoMultiparty)\n  .use(function(handle) {\n    handle('request', function(env, next) {\n\n      //filedata is the data parameter of the upload.\n      //Everything if after a successful parse is placed into env.multiparty for access down the pipeline.\n      var file = env.multiparty.files.filedata[0];\n\n      var rs = fs.createReadStream(file.path);\n      var ws = fs.createWriteStream(file.originalFilename + '0');\n\n      rs.pipe(ws);\n      env.response.statusCode = 201;\n      next(env)\n\n    });\n  })\n  .listen(3000);\n```\n",
  "readmeFilename": "README.md"
}
